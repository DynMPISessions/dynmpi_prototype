<?xml version="1.0" encoding="UTF-8"?>
<bag
  xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean"
  xmlns:byte="http://www.w3.org/2001/XMLSchema#byte"
  xmlns:short="http://www.w3.org/2001/XMLSchema#short"
  xmlns:int="http://www.w3.org/2001/XMLSchema#int"
  xmlns:long="http://www.w3.org/2001/XMLSchema#long"
  xmlns:unsignedByte="http://www.w3.org/2001/XMLSchema#unsignedByte"
  xmlns:unsignedShort="http://www.w3.org/2001/XMLSchema#unsignedShort"
  xmlns:unsignedInt="http://www.w3.org/2001/XMLSchema#unsignedInt"
  xmlns:unsignedLong="http://www.w3.org/2001/XMLSchema#unsignedLong"
  xmlns:float="http://www.w3.org/2001/XMLSchema#float"
  xmlns:double="http://www.w3.org/2001/XMLSchema#double"
  xmlns:null="http://www.intel.com/2009/BagSchema#null"
  xmlns:blob="http://www.intel.com/2009/BagSchema#blob"
  >

  <internal>
    <id>mc2</id>
    <name>mc2.name</name>
    <shortName>mc2.name</shortName>
    <description>mc2.description</description>

    <!-- This is the alias that users reference from CL -->
    <alias>mi2</alias>
    <abbreviation>mi2</abbreviation>

    <int:schemaVersion>1</int:schemaVersion>
    <int:contentVersion>1</int:contentVersion>

    <property name="helpId">intel.che.nem.analysis_type_memory_pane_f3110</property>

    <property name="slowdown">10x-40x</property>
    <!-- This is for GUI -->
    <property name="memory_overhead_image">peak-m2</property>
    <property name="analysis_overhead_image">choice_2</property>
  </internal>

  <prerequisites/>

  <knobs
    xsl:version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:exsl="http://exslt.org/common"
    exsl:keep_exsl_namespace=""
    syntax="norules">

    <booleanKnob id="detect_invalid_accesses" cliName="detect-invalid-accesses" displayName="knob.detect_invalid_accesses.name">
      <description>knob.detect_invalid_accesses.description</description>
      <boolean:defaultValue>true</boolean:defaultValue>
    </booleanKnob>

    <booleanKnob id="detect_leaks_on_exit" cliName="detect-leaks-on-exit" displayName="knob.detect_leaks_on_exit.name">
      <description>knob.detect_leaks_on_exit.description</description>
      <boolean:defaultValue>true</boolean:defaultValue>
    </booleanKnob>

    <booleanKnob id="detect_resource_leaks" cliName="detect-resource-leaks" displayName="knob.detect_resource_leaks.name" boolean:visible="false">
      <xsl:if test="exsl:ctx('targetOS') = 'Windows'">
        <xsl:attribute name="boolean:visible">true</xsl:attribute>
      </xsl:if>
      <description>knob.detect_resource_leaks.description</description>
      <boolean:defaultValue>true</boolean:defaultValue>
    </booleanKnob>

    <!--deprecated-->
    <booleanKnob id="resources" cliName="resources" displayName="knob.resources.name" boolean:visible="false">
      <description>knob.resources.description</description>
      <boolean:defaultValue>true</boolean:defaultValue>
    </booleanKnob>

    <booleanKnob id="enable_memory_growth_detection" cliName="enable-memory-growth-detection" displayName="knob.enable_memory_growth_detection.name">
      <description>knob.enable_memory_growth_detection.description</description>
      <boolean:defaultValue>true</boolean:defaultValue>
    </booleanKnob>

    <booleanKnob id="detect_leaks_on_demand" cliName="enable-on-demand-leak-detection" displayName="knob.detect_leaks_on_demand.name">
      <description>knob.detect_leaks_on_demand.description</description>
      <boolean:defaultValue>true</boolean:defaultValue>
    </booleanKnob>

    <booleanKnob id="still_allocated_memory" cliName="still-allocated-memory" displayName="knob.still_allocated_memory.name">
      <description>knob.still_allocated_memory.description</description>
      <boolean:defaultValue>true</boolean:defaultValue>
    </booleanKnob>

    <enumKnob id="stack_depth" cliName="stack-depth" displayName="knob.stack_depth.name">
      <description>knob.stack_depth.description</description>
      <values>
        <value displayName="knob.stack_depth.1">1</value>
        <value displayName="knob.stack_depth.8">8</value>
        <value displayName="knob.stack_depth.16">16</value>
        <value displayName="knob.stack_depth.24">24</value>
        <value displayName="knob.stack_depth.32">32</value>
        <defaultValue>8</defaultValue>
      </values>
    </enumKnob>

  </knobs>

  <analysis
    xsl:version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:exsl="http://exslt.org/common"
    exsl:keep_exsl_namespace=""
    syntax="norules">

    <collector id="runmc">
      <binaryName>runmc</binaryName>

      <boolean:collectorKnob knob="cknob_detect_invalid_accesses">true</boolean:collectorKnob>

      <boolean:collectorKnob knob="cknob_still_allocated_memory">
        <xsl:value-of select="exsl:ctx('still_allocated_memory')"/>
      </boolean:collectorKnob>

      <boolean:collectorKnob knob="cknob_detect_leaks_on_exit">
        <xsl:value-of select="exsl:ctx('detect_leaks_on_exit')"/>
      </boolean:collectorKnob>

      <boolean:collectorKnob knob="cknob_detect_leaks_on_demand">
        <xsl:value-of select="exsl:ctx('detect_leaks_on_demand')"/>
      </boolean:collectorKnob>

      <boolean:collectorKnob knob="cknob_enable_memory_growth_detection">
        <xsl:value-of select="exsl:ctx('enable_memory_growth_detection')"/>
      </boolean:collectorKnob>

      <int:collectorKnob knob="cknob_stack_depth">
        <xsl:value-of select="exsl:ctx('stack_depth')"/>
      </int:collectorKnob>

      <boolean:collectorKnob knob="cknob_detect_invalid_accesses">
        <xsl:value-of select="exsl:ctx('detect_invalid_accesses')"/>
      </boolean:collectorKnob>

      <boolean:collectorKnob knob="cknob_detect_resource_leaks">
        <!-- logic needed to deprecate "resources" knob-->
        <xsl:choose>
          <xsl:when test="(exsl:ctx('resources')) and (exsl:ctx('detect_resource_leaks'))">
            true
          </xsl:when>
          <xsl:otherwise>
            false
          </xsl:otherwise>
        </xsl:choose>
      </boolean:collectorKnob>
    </collector>

  </analysis>

  <!-- vim: set ft=xml et ts=8 sw=2 sts=2: -->
</bag>
