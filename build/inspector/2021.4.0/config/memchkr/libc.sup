# See rules syntax in suppression_rules_format.sup file

{
    str*len(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*str*len*
}
{
    str*len(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*str*len*
}
{
    str*cmp(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*str*cmp*
}
{
    str*cmp(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*str*cmp*
}
{
    str*cat(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*str*cat*
}
{
    str*cat(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*str*cat*
}
{
    str*cpy(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*str*cpy*
}
{
    str*cpy(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*str*cpy*
}
{
    str*chr(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*str*chr*
}
{
    str*chr(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*str*chr*
}
{
    str*str(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*str*str*
}
{
    str*str(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*str*str*
}
{
    memcmp(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*memcmp*
}
{
    memcmp(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*memcmp*
}
{
    bcmp(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*bcmp*
}
{
    bcmp(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*bcmp*
}
{
    strerror(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*strerror*
}
{
    strerror(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*strerror*
}
{
    rindex(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:rindex
}
{
    rindex(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:rindex
}
{
    index(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:index
}
{
    index(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:index
}
{
    memchr/rawmemchr(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*memchr*
}
{
    memchr/rawmemchr(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*memchr*
}
{
    str???(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:str???
}
{
    str???(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:str???
}
{
    str????(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:str????
}
{
    str????(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:str????
}
{
    str???_l(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:str???_l
}
{
    str???_l(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:str???_l
}
{
    str????_l(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:str????_l
}
{
    str????_l(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:str????_l
}
{
    __str*_*(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:__str*_*
}
{
    __str*_*(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:__str*_*
}
{
    __GI_*str*(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:__GI_*str*
}
{
    __GI_*str*(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:__GI_*str*
}
{
    stpcpy(partial uninit): Algorithmic check for null terminated string
    Memchkr:PartialUninit0
    fun:*stpcpy*
}
{
    stpcpy(partial invalid): Algorithmic check for null terminated string
    Memchkr:PartialInvalid0
    fun:*stpcpy*
}
{
    pthread mmap leak
    Memchkr:Leak
    fun:*mmap
    obj:libpthread.so*
}
{
    libc mmap leak
    Memchkr:Leak
    fun:*mmap
    obj:libc*.so*
}
{
    pthread_create leak
    Memchkr:Leak
    fun:*pthread_create*
}
{
    pthread attribute leak
    Memchkr:Leak
    fun:pthread_getattr_np
}
{
    Padded structure copy sigaltstack (stack_t - 24 bytes on Intel64/IPF)
    Memchkr:PartialUninit1
    fun:*sigaltstack
}
{
    poll (partial uninit) Incorrect modeling of system call
    Memchkr:PartialUninit0
    fun:*poll
}
{
    poll (partial uninit) Incorrect modeling of system call
    Memchkr:PartialUninit0
    fun:*
    fun:*poll
}
{
    Padded structure copy sigaltstack (stack_t - 24 bytes on Intel64/IPF)
    Memchkr:PartialUninit1
    fun:*
    fun:*sigaltstack
}
{
    deregister_frame(4 byte invalid)
    Memchkr:Invalid4
    fun:*deregister_frame
}
{
    register_frame leak (in libgcc)
    Memchkr:Leak
    fun:__register_frame*
}
{
    posix_memalign leak
    Memchkr:Leak
    fun:*posix_memalign
}
{
    Fortran benign access
    Memchkr:PartialInvalid8
    fun:unaligned_bigint
}
{
    Fortran benign access
    Memchkr:PartialInvalid4
    fun:unaligned_bigint
}
{
    Fortran benign access
    Memchkr:Invalid4
    fun:unaligned_bigint
}
{
    wordcopy* (8 byte partial invalid): Algorithmic copy of space
    Memchkr:PartialInvalid8
    fun:*wordcopy_*
}
{
    wordcopy* (8 byte partial uninit): Algorithmic copy of space
    Memchkr:PartialUninit8
    fun:*wordcopy_*
}
{
    clntudp related uninit read
    Memchkr:Uninit0
    fun4:*
    fun:clntudp_call
}
{
    clnt??p (clntudp/clnttcp) related uninit read
    Memchkr:Uninit0
    fun:clnt??p_c*
}
{
    xdr_replymsg related uninit read
    Memchkr:Uninit0
    fun7:*
    fun:xdr_replymsg
}
{
    xdr_replymsg related uninit read
    Memchkr:Uninit0
    fun:xdr_replymsg
}
{
    libX11 string resource benign uninit
    Memchkr:Uninit1
    fun:*
    fun:XrmPutStringResource
}
{
    libX11 string resource benign uninit
    Memchkr:Uninit8
    fun:*
    fun:XrmPutStringResource
}
{
    FcFontList (8 byte partial uninit): Algorithmic copy of space
    Memchkr:PartialUninit8
    fun:FcFontList
}
{
    FcFontRenderPrepare (8 byte partial uninit): Algorithmic copy of space
    Memchkr:PartialUninit8
    fun:FcFontRenderPrepare
}
{
    Partial uninit read for Fortran write(*, (A)) function
    Memchkr:PartialUninit0
    fun2:*
    fun:for__open_default
}
{
    Uninit read 4 for Fortran write(*, (A)) function
    Memchkr:Uninit4
    fun:*
    fun:*
    fun:for__open_default
}
{
    Uninit in Intel Fortran print function (2013 update 1)
    Memchkr:Uninit0
    fun:cvt_ieee_t_to_text_ex
    fun:for__format_value
    fun:for_write_seq_fmt_xmit
}
{
    munmap from _dl_close
    Memchkr:Free
    fun:_dl_close
}
{
    munmap from _dl_close
    Memchkr:Free
    fun:munmap
    fun:_dl_close
}
{
    Uninit read when memcpy used from xdr routines
    Memchkr:Uninit0
    fun:*memcpy*
    fun:*xdr*
}
{
    Uninit read when doing a throw
    Memchkr:Uninit4
    fun:*_throw*
}
{
    Uninit read when doing a catch
    Memchkr:Uninit4
    fun:*_begin_catch*
}
{
    Uninit read when doing a catch
    Memchkr:Uninit8
    fun:*_begin_catch*
}
{
    Uninit read with std stream exception handling
    Memchkr:Uninit4
    fun:*uncaught_exception*
}
{
    Uninit read with exception handling setup
    Memchkr:Uninit4
    fun:*allocate_exception*
}
{
    Uninit read with X11 key translation
    Memchkr:Uninit1
    fun:*XTranslateKeySym*
}
{
    Uninit read with X11 XNextEvent
    Memchkr:Uninit4
    fun:*
    fun:XNextEvent
}
{
    Uninit read with X11 X*Event
    Memchkr:Uninit0
    fun:*memcpy*
    fun:X*Event
}
{
    Partial uninit read with X11 X*Event
    Memchkr:PartialUninit0
    fun:*memcpy*
    fun:X*Event
}
{
    Partial uninit read with X11 X*Event
    Memchkr:PartialUninit0
    fun:X*Event
}
{
    Uninit read with X11 X*Event
    Memchkr:Uninit0
    fun:X*Event
}
{
    loader leak when .so not found
    Memchkr:Leak
    fun:vasprintf
    fun:asprintf
    fun:dlerror
}
{
    loader leak when .so not found (don't see past vasprintf in probe mode)
    Memchkr:LeakProbe
    fun:vasprintf
}
{
    Partial invalid read with __str*sse* functions
    Memchkr:PartialInvalid16
    fun:__str*sse*
}
{
    Partial invalid read with __str*sse* functions
    Memchkr:PartialInvalid16
    fun:__m128*str*
}
{
    Partial uninit read with __str*sse* functions
    Memchkr:PartialUninit16
    fun:__str*sse*
}
{
    Partial uninit read with __str*sse* functions
    Memchkr:PartialUninit16
    fun:__m128*str*
}
{
    Uninit read with XOpenDisplay
    Memchkr:Uninit0
    fun5:*
    fun:_XConnectXCB
}
{
    Partial Uninit read with XOpenDisplay
    Memchkr:PartialUninit0
    fun5:*
    fun:_XConnectXCB
}
{
    Leak with XOpenDisplay
    Memchkr:Leak
    fun5:*
    fun:_XConnectXCB
}
{
    Uninit read with XrmMergeDatabases
    Memchkr:Uninit1
    fun:XrmMergeDatabases
}
{
    Partial uninit read with X
    Memchkr:PartialUninit4
    fun2:*
    fun:_XlcCreateLocaleDataBase
}
{
    Partial uninit read with XOpenDisplay
    Memchkr:PartialUninit4
    fun:*
    fun:XOpenDisplay
}
{
    Partial uninit read with XOpenDisplay
    Memchkr:PartialUninit8
    fun:*
    fun:*
    fun:*
    fun:XOpenDisplay
}
{
    Uninit read with XSetSizeHints
    Memchkr:Uninit4
    fun:XSetSizeHints
}
{
    Uninit read with XPending
    Memchkr:Uninit4
    fun:*
    fun:XPending
}
{
    Uninit read with _XScreenOfWindow
    Memchkr:Uninit1
    fun:_XScreenOfWindow
}
{
    Uninit read with cilk
    Memchkr:Uninit4
    fun:*cilk::*
}
{
    tbb internal libtbb_debug leak
    Memchkr:Leak
    fun:_ZN3tbb8internal*
    obj:libtbb_debug.so*
}
{
    Uninit read with get_nprocs (Ubuntu 10.10 32-bit)
    Memchkr:Uninit4
    obj:libc.so*
    fun:get_nprocs
}
{
    Invalid read with sysconf (FC 19 64-bit)
    Memchkr:Invalid8
    obj:*
    obj:libc.so*
    fun:sysconf
}
{
    Uninit read when memcpy used during static initialization
    Memchkr:Uninit4
    fun:*memcpy*
    fun:_dl*
}
{
    Uninit read when mempcpy used during static initialization
    Memchkr:Uninit4
    fun:*mempcpy*
    fun:*
    fun:_dl*
}
{
    Uninit read during memset--occurs because of the use of mov for prefetching in i586 version of memset.S
    Memchkr:Uninit4
    fun:*memset*
}
{
    PartialUninit16 when memcpy used for _widening_ strings in STL
    Memchkr:PartialUninit16
    fun:*memcpy*
    fun:*ctype*widen*
}
{
    PartialUninit8 when memcpy used during g_memdup in some situations
    Memchkr:PartialUninit8
    fun:*memcpy*
    fun:g_memdup
    fun:g_type*
}
{
    Uninit1 when memcpy used during g_memdup in some situations
    Memchkr:Uninit1
    fun:*memcpy*
    fun:g_memdup
    fun:g_source*
    fun:g_type*
}
{
    PartialUninit8 when memcpy used by Pango
    Memchkr:PartialUninit8
    fun:*memcpy*
    fun:pango_glyph*
}
{
    PartialUninit4 when memcpy used by Pango
    Memchkr:PartialUninit4
    fun:*memcpy*
    fun:pango_glyph*
}
{
    Uninit1 when memcpy used by Pango
    Memchkr:Uninit1
    fun:*memcpy*
    fun:pango_glyph*
}
{
    Uninit when memcpy used by X/Pango XFT
    Memchkr:Uninit0
    fun:*memcpy*
    obj*:libX*
    fun:*pango_xft*
}
{
    PartialUninit when memcpy used by X/Pango XFT
    Memchkr:PartialUninit0
    fun:*memcpy*
    obj*:libX*
    fun:*pango_xft*
}
{
    Uninit2 in Pango XFT
    Memchkr:Uninit2
    obj*:libX*
    fun:*pango_xft*
}
{
    PartialUninit4 in Pango in copying font description objects (which are internal to Pango)
    Memchkr:PartialUninit4
    fun:pango_font_description_copy*
}
{
    PartialUninit8 in Pango in copying font description objects (which are internal to Pango)
    Memchkr:PartialUninit8
    fun:pango_font_description_copy*
}
{
    PartialUninit8 in Pango
    Memchkr:PartialUninit8
    fun:pango_find_map
}
{
    PartialUninit8 in fontconfig/Pango having to do with font descriptions
    Memchkr:PartialUninit8
    obj:libfontconfig*
    obj:libfontconfig*
    fun:FcNameParse
    fun:pango*font*
}
{
    PartialUninit8 in fontconfig/Pango having to do with font descriptions
    Memchkr:PartialUninit8
    obj:libfontconfig*
    obj:libfontconfig*
    fun:pango*font*
}
{
    Uninit4 in fontconfig/Pango
    Memchkr:Uninit4
    obj*:libfontconfig*
    fun*:*font*
    fun:pango*font*
}
{
    Uninit4 in fontconfig/Pango
    Memchkr:Uninit4
    obj*:libfontconfig*
    obj*:libpango*
    fun:pango*font*
}
{
    Leak in libfontconfig
    Memchkr:Leak
    fun:FcConfigFilename
}
{
    Uninit1 when memmove used by Pango
    Memchkr:Uninit1
    fun:*memmove*
    fun:pango_glyph*
}
{
    PartialUninit4 when memmove used by Pango
    Memchkr:PartialUninit4
    fun:*memmove*
    fun:pango_glyph*
}
{
    PartialUninit8 in Cairo (in a struct internal to Cairo)
    Memchkr:PartialUninit8
    fun:cairo_pattern_create_for_surface
}
{
    PartialUninit in Cairo
    Memchkr:PartialUninit0
    fun:*memcpy*
    fun:cairo_path_destroy
}
{
    Uninit in Cairo initiated in cairo_path_destroy
    Memchkr:Uninit1
    fun:*mem*cpy*
    obj*:*
    fun:cairo_path_destroy
}
{
    PartialUninit8 in Cairo
    Memchkr:PartialUninit8
    fun:cairo_font_options_get_hint_metrics
}
{
    PartialUninit8 in Cairo/libc
    Memchkr:PartialUninit8
    obj*:libc.*
    fun:*qsort*
    fun:cairo_surface_create_similar
}
{
    Uninit4 in Cairo/libc
    Memchkr:Uninit4
    obj*:libc.*
    fun:*qsort*
    fun:cairo_surface_create_similar
}
{
    PartialUninit8 in gnomevfs
    Memchkr:PartialUninit8
    obj*:libc.so*
    fun:*qsort*
    fun:gnome_vfs_*
}
{
    Uninit read having to do with raw_storage buffer resize
    Memchkr:Uninit0
    fun:*raw_storage*resize*
    fun:*raw_storage*insert*
}
{
    Uninit read having to do with Boost regex resize
    Memchkr:Uninit0
    fun2:*memcpy*
    fun:*raw_storage*resize*
    fun:*raw_storage*insert*
#   fun:*boost*regex*
}
{
    PartialUninit read having to do with Boost regex resize
    Memchkr:PartialUninit0
    fun:*memcpy*
    fun:*memcpy*
    fun:*raw_storage*resize*
    fun:*raw_storage*insert*
#   fun:*boost*regex*
}
{
    PartialUninit read having to do with Boost regex resize
    Memchkr:PartialUninit4
    fun:*memmove*
    fun:*raw_storage*insert*
    fun:*boost*regex*
}
{
    PartialUninit read having to do with copying strings in libxml
    Memchkr:PartialUninit16
    fun:*memcpy*
    fun:*memcpy*
    fun:UTF*To*
}
{
    PartialUninit having to do with libxml (xmlCreatePushParserCtxt)
    Memchkr:PartialUninit0
    fun:*memcpy*
    fun:xmlCreatePushParserCtxt
}
{
    Uninit having to do with libxml (xmlCreatePushParserCtxt)
    Memchkr:Uninit0
    fun:*memcpy*
    fun:xmlCreatePushParserCtxt
}
{
    Uninit read having to do with gdk_xid_table_lookup/XGetWindowProperty
    Memchkr:Uninit0
    fun:gdk_xid_table_lookup
}
{
    Uninit read having to do with gdk_xid_table_lookup/XGetWindowProperty
    Memchkr:Uninit0
    fun:*memcpy*
    fun:gdk_xid_table_lookup
}
{
    PartialUninit4 having to do with GObject signals that can occur frequently
    Memchkr:PartialUninit4
    fun:g_signal_override_class_closure
}
{
    PartialUninit4 having to do with GObject signals that can occur frequently
    Memchkr:PartialUninit4
    fun:g_signal_handler_disconnect
}
{
    PartialUninit4 having to do with GObject signals that can occur frequently
    Memchkr:PartialUninit4
    fun:g_signal_newv
}
{
    PartialUninit4 having to do with GObject signals that can occur frequently
    Memchkr:PartialUninit4
    fun:g_signal_chain_from_overridden
}
{
    PartialUninit4 having to do with GObject signals that can occur frequently
    Memchkr:PartialUninit4
    fun:g_signal_handlers_destroy
}
{
    PartialUninit8 having to do with GObject/GTK+
    Memchkr:PartialUninit8
    fun:*memcpy*
    obj*:libg*
    fun:g_source_set_closure
    obj*:libg*
    fun:gtk_*_get_type
}
{
    PartialUninit having to do X cursors
    Memchkr:PartialUninit0
    fun:*memcpy*
    obj*:libX*
    fun:XCreate*Cursor
}
{
    Uninit1 having to do GDK
    Memchkr:Uninit1
    fun:gdk_keyval_convert_case
    obj*:libgdk*
    fun:gdk_event*
}
{
    Uninit1 having to do GTK
    Memchkr:Uninit1
    fun:gtk_drag_dest_set
    fun:gtk_text_view_new
}
{
    Uninit1 having to do X cursors
    Memchkr:Uninit1
    fun:*memcpy*
    obj*:libX*
    fun:XCreate*Cursor
}
{
    Uninit1 having to do X cursors
    Memchkr:Uninit1
    obj*:libX*
    fun:XCreate*Cursor
}
{
    Uninit4 read having to do with X cursors
    Memchkr:Uninit4
    fun:*strlen*
    obj*:libX*
    fun:XcursorGetTheme
}
{
    Partial uninit having to do with libpng
    Memchkr:PartialUninit0
    fun:*memcpy*
    fun:png_read_row
}
{
    Uninit having to do with libpng
    Memchkr:Uninit0
    fun:*memcpy*
    fun:png_read_row
}
{
    Partial uninit having to do with libpng
    Memchkr:PartialUninit0
    fun:*memcpy*
    fun:png_memcpy*
}
{
    Uninit having to do with libpng
    Memchkr:Uninit0
    fun:*memcpy*
    fun:png_memcpy*
}
{
    Uninit having to do with libgio
    Memchkr:Uninit0
    fun:g_credentials_*
}
{
    Uninit having to do with libgio
    Memchkr:Uninit0
    fun:g_dbus_message_bytes_needed
    fun:g_dbus_proxy_call_sync
}
{
    Uninit having to do with libgio
    Memchkr:Uninit0
    fun:*memcpy*
    fun:g_mount_*shadow*
}
{
    Partial uninit having to do with libgio
    Memchkr:PartialUninit0
    fun:*memcpy*
    fun:g_mount_*shadow*
}
{
    GTK engine leaks
    Memchkr:Leak
    fun:XCreateGC
    obj*:libg*
    obj:libclearlooks.so*
}
{
    GTK engine leaks
    Memchkr:Leak
    obj*:libg*
    obj:libclearlooks.so*
}
{
    GTK-related leaks initiated from gtk_init
    Memchkr:Leak
    fun:g*
    obj*:*
    fun:gtk_init*
}
{
    ATK/Bonobo/ORBit leaks
    Memchkr:Leak
    obj*:libg*
    obj*:libORBit*
    obj*:libbonobo*
    obj:libatk-bridge.so*
}
{
    libSM-related uninits
    Memchkr:Uninit0
    fun:*memcpy*
    obj:libSM.*
}
{
    libSM-related partial uninits
    Memchkr:PartialUninit0
    fun:*memcpy*
    obj:libSM.*
}
{
    dbus-related uninits
    Memchkr:Uninit0
    fun:*memmove*
    fun:dbus_shutdown
}
{
    dbus-related partial uninits
    Memchkr:PartialUninit0
    fun:*memmove*
    fun:dbus_shutdown
}
{
    dbus/GIO-related memory leaks
    Memchkr:Leak
    fun:g_*
    obj*:libg*
    fun:g_dbus_proxy_call_sync
}
{
    Qt memfill uninits
    Memchkr:Uninit0
    fun:*memcpy*
    fun:_Z*qt_memfill*
}
{
    Qt realloc uninits
    Memchkr:Uninit0
    fun:_ZN*Q*7realloc*
}
{
    Qt memory leak having to do with Glib event loop
    Memchkr:Leak
    obj*:libg*
    fun:_ZN*QEventDispatcherGlib*
}
{
    Qt QRegExp uninits (QRegExp::operator= -> *QRegExpaS*)
    Memchkr:Uninit0
    fun:*memcpy*
    obj*:libQt*
    fun:_ZN*QRegExpaS*
}
{
    Qt/X event uninits
    Memchkr:Uninit0
    fun:XCheck*Event
    fun:*11*Event*
    obj:libQt*
}
{
    Qt/X event uninits
    Memchkr:Uninit0
    fun:XCheck*Event
    obj:*
    fun:*11*Event*
    obj:libQt*
}
{
    Qt uninit 1 with QMetaType class
    Memchkr:Uninit1
    fun:_ZN*QMetaType*unregisterType*
}
{
    Qt QVariantAnimation uninit read
    Memchkr:Uninit0
    fun:_ZN*QVariantAnimation*valueChanged*
}
{
    Qt QVariantAnimation/QVariant uninit read
    Memchkr:Uninit0
    fun:_ZN*QVariantC*
    obj:*
    fun:*_ZN*QVariantAnimation*keyValues*
}
{
    Qt partial uninit in QFontEngine constructor
    Memchkr:PartialUninit0
    fun:_ZN*QFontEngineC*
}
{
    Qt uninit in private classes (may result in some false negatives)
    Memchkr:Uninit0
    fun:_ZN*Q*Private*
    obj:libQt*
}
{
    Qt partial uninit in private classes (may result in some false negatives)
    Memchkr:PartialUninit0
    fun:_ZN*Q*Private*
    obj:libQt*
}
{
    Qt uninit read in QPaintEngineState class (all class methods take no parameters)
    Memchkr:Uninit0
    fun:_ZNK*QPaintEngineState*
}
{
    Qt uninit read having to do with painting
    Memchkr:Uninit0
    fun:_ZN*QPainter*setClipRegion*
    fun:_ZN*Q*paintEvent*
}
{
    Qt partial uninit in QBoxLayout destructor (non-virtual thunk)
    Memchkr:PartialUninit0
    fun:_ZT*QBoxLayoutD*
}
{
    Qt uninit in QBoxLayout destructor (non-virtual thunk)
    Memchkr:Uninit0
    fun:_ZT*QBoxLayoutD*
}
{
    Qt memory leaks in QGtkStyle class (leaks GTK+ objects)
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:_ZN*QGtkStyle*
}
{
    Qt memory leaks in QGtkStyle class (leaks GTK+ objects)
    Memchkr:Leak
    obj:libfreetype*
    obj*:*
    fun:_ZN*QGtkStyle*
}
{
    Qt memory leaks in QGtkStyle class (leaks GTK+ objects)
    Memchkr:Leak
    obj:libfontconfig*
    obj*:*
    fun:_ZN*QGtkStyle*
}
{
    Qt memory leaks in QGtkStyle class (leaks GTK+ objects)
    Memchkr:Leak
    obj:libcairo*
    obj*:*
    fun:_ZN*QGtkStyle*
}
{
    Qt memory leaks in QGtkStyle class (leaks GTK+ objects)
    Memchkr:Leak
    obj:libgdk*
    obj*:*
    fun:_ZN*QGtkStyle*
}
{
    Qt memory leaks in QGtkStyle class (leaks GTK+ objects)
    Memchkr:Leak
    obj:libpango*
    obj*:*
    fun:_ZN*QGtkStyle*
}
{
    Qt memory leaks in QGtkStyle class (leaks GTK+ objects)
    Memchkr:Leak
    obj*:libX*
    obj*:libg*
    fun:_ZN*QGtkStyle*
}
{
    Partial uninit with Python
    Memchkr:PartialUninit0
    fun:*memcpy*
    obj:libpython*
}
{
    Uninit with Python
    Memchkr:Uninit0
    fun:*memcpy*
    obj:libpython*
}
{
    Uninit in librsvg
    Memchkr:Uninit0
    fun:rsvg_set_default_dpi*
}
{
    Uninit in librsvg
    Memchkr:Uninit0
    obj*:librsvg*
    fun:rsvg_set_default_dpi*
}
{
    Partial Uninit in librsvg
    Memchkr:PartialUninit0
    obj*:librsvg*
    fun:rsvg_set_default_dpi*
}
{
    Partial Uninit in librsvg
    Memchkr:PartialUninit0
    fun:*memcpy*
    obj*:librsvg*
    fun:rsvg_set_default_dpi*
}
{
    Invalid with gnomevfs and libfile (a gnomevfs module)
    Memchkr:Invalid1
    obj:libgnomevfs*
    obj:libfile.so
}
{
    Invalid deallocation in libfile (a gnomevfs module)
    Memchkr:Free
    obj:libfile.so
}
{
    Uninit access in memcpy initiated from gtk_window_new
    Memchkr:Uninit0
    fun:*mem*cpy*
    obj*:*
    fun:gtk_window_new
}
{
    GTK-related leaks initiated from gtk_window_new
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:gtk_window_new
}
{
    GTK-related XCreateGC leaks initiated from gtk_window_new
    Memchkr:Leak
    fun:XCreateGC
    obj*:*
    fun:gtk_window_new
}
{
    GTK-related leaks initiated from gtk_window_group_remove_window
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:gtk_window_group_remove_window
}
{
    GTK-related leaks initiated from gtk_window_group_new
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:gtk_window_group_new
    fun:gtk_window_get_group
}
{
    GTK-related leaks initiated from g_type_register_static
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:g_type_register_static
}
{
    glib-related reachable leaks initiated from g_type_register_static
    Memchkr:Leak
    fun:allocator_add_slab
    obj*:*
    fun:g_type_register_static
}
{
    GDK-related leaks initiated from gdk_screen_set_font_options (cairo_font_options_copy)
    Memchkr:Leak
    fun:cairo_font_options_copy
    fun:gdk_screen_set_font_options
}
{
    GTK-related leaks in XCreateGC initiated from g_main_context_prepare
    Memchkr:Leak
    fun:XCreateGC
    obj*:*
    fun:g_main_context_prepare
}
{
    GTK-related leaks initiated from g_main_context_prepare
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:g_main_context_prepare
}
{
    PartialUninit initiated from gtk_init
    Memchkr:PartialUninit0
    fun:g_*
    obj*:*
    fun:gtk_init*
}
{
    PartialInvalid initiated from XGetDefault
    Memchkr:PartialInvalid0
    fun:*mem*cpy*
    obj*:*
    fun:XGetDefault
}
{
    PartialUninit in libresolv.so initiated from XOpenDisplay
    Memchkr:PartialUninit0
    obj:libresolv*
    obj*:*
    fun:XOpenDisplay
}
{
    Uninit in libresolv.so initiated from XOpenDisplay
    Memchkr:Uninit0
    obj:libresolv*
    obj*:*
    fun:XOpenDisplay
}
{
    PartialUninit in libc.so initiated from XOpenDisplay
    Memchkr:PartialUninit0
    obj:libc*
    obj*:*
    fun:XOpenDisplay
}
{
    Uninit in libc.so initiated from XOpenDisplay
    Memchkr:Uninit0
    obj:libc*
    obj*:*
    fun:XOpenDisplay
}
{
    Uninit in X11 initiated from XOpenDisplay
    Memchkr:Uninit0
    fun:*X11*
    obj*:*
    fun:XOpenDisplay
}
{
    Uninit in Cairo
    Memchkr:Uninit0
    fun:cairo_version*
}
{
    GTK-related 4byte invalid access initiated from gtk_window_new
    Memchkr:Invalid4
    fun:gdk_colormap_query_color
    obj*:*
    fun:gtk_window_new
}
{
    GTK-related leak initiated from gdk_window_is_viewable
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:gdk_window_is_viewable
}
{
    GTK-related leak in XCreateGC initiated from gdk_window_end_paint(gdk_x11_gc_get_xdisplay is called)
    Memchkr:Leak
    fun:XCreateGC
    fun:gdk_x11_*_get_*
    obj*:*
    fun:gdk_window_end_paint
}
{
    Leak initiated in g_signal_handler_disconnect having to do with GObject signals
    Memchkr:Leak
    fun:g_*alloc*
    obj*:*
    fun:g_signal_handler_disconnect
}
{
    Uninit read in __libc_clntudp_bufcreate
    Memchkr:Uninit0
    fun:__libc_clntudp_bufcreate
    obj*:*
    fun:yp_unbind
}
{
    Uninit read in yperr_string
    Memchkr:Uninit0
    fun:yperr_string
}
{
    Leak in GTK main context check, this is not always observable
    Memchkr:Leak
    fun:g_*
    fun:*
    fun:g_ptr_array_add
    fun:g_main_context_check
}
{
    Leak in GTK main context check, this is not always observable
    Memchkr:Leak
    fun:g_*
    fun:g_ptr_array_new
    fun:g_array_set_size
    fun:g_static_private_set
    fun2:*
    fun:g_main_context_check
}
# note that gdk_x11_gc_get_xgc is deprecated after gtk version 2.22
{
    PartialUninit read in gdk_x11_gc_get_xgc
    Memchkr:PartialUninit0
    fun:gdk_x11_gc_get_xgc
}
{
    Uninit read in gtk_window_set_geometry_hints when some of the fields are not initialized and copied (found in the gtk_file_chooser_dialog_get_type)
    Memchkr:Uninit0
    fun:gtk_window_set_geometry_hints
    fun:gtk_file_chooser_dialog_get_type
}
{
    Uninit read in gtk_window_set_geometry_hints when some of the fields are not initialized and copied (found in the sources:wxTopLevelWindowGTK::DoSetSizeHints, wxPopupWindow::GtkOnSize, gtk_collasiblepane_expanded_callback)
    Memchkr:Uninit0
    fun:gtk_window_set_geometry_hints
    obj:libwx_gtk*
}
{
    Leaks internal to MPI_Init
    Memchkr:Leak
    fun:*strdup*
    fun*:*
    fun:MPI_Init
}
{
    Leaks internal to MPI_Init
    Memchkr:Leak
    obj:libmpi*
    fun*:*
    fun:MPI_Init
}
{
    Leaks internal to MPI_Init
    Memchkr:Leak
    obj:libopen-rte.so*
    fun*:*
    fun:MPI_Init
}
{
    Leaks internal to MPI_Init
    Memchkr:Leak
    obj:libopen-pal.so*
    fun*:*
    fun:MPI_Init
}
{
    Leaks internal to mpi_finalize
    Memchkr:Leak
    obj:libmpi*
    fun*:*
    fun:*mpi_finalize
}
{
    Unint internal to mpi pool
    Memchkr:Uninit0
    fun:mca_mpool_sm_alloc
}
{
    Uninit1 read in gtk_drag_dest_set
    Memchkr:Uninit1
    fun:gtk_drag_dest_set
    fun:gtk_entry_get_type
}
{
    Leak in Fortran I/O stmt when using openmp
    Memchkr:Leak
    fun:for__get_vm
    fun2:for__*_threadstor_threads
    fun:for__acquire_lun
}
{
    Leaks internal to MPI_Init and famliy
    Memchkr:Leak
    fun:*strdup*
    obj*:*
    fun:MPI_Init*
}
{
    Leaks internal to MPI_Init and family
    Memchkr:Leak
    obj:libmpi*
    obj*:*
    fun:MPI_Init*
}
{
    Leaks internal to MPI_Init and family
    Memchkr:Leak
    obj:libopen-rte.so*
    obj*:*
    fun:MPI_Init*
}
{
    Leaks internal to MPI_Init and family
    Memchkr:Leak
    obj:libopen-pal.so*
    obj*:*
    fun:MPI_Init*
}
{
    Leaks internal to mpi_finalize
    Memchkr:Leak
    obj:libmpi*
    obj*:*
    fun:*mpi_finalize
}
{
    Uninit internal to mpi pool
    Memchkr:Uninit0
    fun:mca_mpool_sm_alloc
}
{
    PartialUninit internal to MPI_Barrier
    Memchkr:PartialUninit0
    obj:libmpi*
    obj*:*
    fun:MPI_Barrier*
}
{
    Uninit internal to MPI_Barrier
    Memchkr:Uninit0
    obj:libmpi*
    obj*:*
    fun:MPI*_Barrier*
    fun:MPI_Barrier*
}
{
    Uninit internal to MPI_Win_fence/lock/unlock
    Memchkr:Uninit0
    obj:libmpi*
    obj*:*
    fun:MPI_Win_*
}
{
    PartialUninit internal to MPI_Win_fence/lock/unlock
    Memchkr:PartialUninit0
    fun:*memcpy*
    obj:libmpi*
    obj*:*
    fun:MPI_Win_*
}
{
    Uninit internal to MPI_Win_fence/lock/unlock
    Memchkr:Uninit0
    fun:*memcpy*
    obj:libmpi*
    obj*:*
    fun:MPI_Win_*
}
{
    Uninit internal to MPI_Start
    Memchkr:Uninit0
    fun:append_frag_to_list
    obj*:*
    fun:mca_pml_ob1_start
}
{
    Uninit internal to MPI_Start
    Memchkr:PartialUninit0
    fun:append_frag_to_list
    obj*:*
    fun:mca_pml_ob1_start
}
{
    Uninit internal to MPI_File functions
    Memchkr:PartialUninit0
    fun:*memcpy*
    obj*:*
    fun:MPI_File_*
}
{
    Uninit internal to MPI_Test and family
    Memchkr:Uninit0
    obj:libmpi*
    obj*:*
    fun:MPI_Test*
}
{
    PartialUninit internal to MPI_Init and family using memmove
    Memchkr:PartialUninit0
    fun:*memmove*
    obj:libmpi*
    obj*:*
    fun:*MPI*Init
}
{
    PartialUninit internal to MPI_Init and family using memcpy
    Memchkr:PartialUninit0
    fun:*memcpy*
    obj:libmpi*
    obj*:*
    fun:*MPI*Init
}
{
    Uninit internal to MPI_Init and family using memmove
    Memchkr:Uninit0
    fun:*memmove*
    obj:libmpi*
    obj*:*
    fun:*MPI*Init
}
{
    Uninit internal to MPI_Init and family using memcpy
    Memchkr:Uninit0
    fun:*memcpy*
    obj:libmpi*
    obj*:*
    fun:*MPI*Init
}
{
    Uninit internal to MPI_Init and family
    Memchkr:Uninit0
    obj:libmpi*
    obj*:*
    fun:*MPI*Init
}
{
    Invalid internal to MPI_Init and family
    Memchkr:Invalid0
    obj:libmpi*
    obj*:*
    fun:*MPI*Init
}
{
    Invalid16 internal to MPI_Init and family (in __strncpy_ssse3--made it an Invalid0 since we don't care what size it occurs for)
    Memchkr:Invalid0
    obj*:libc.so*
    obj:libmpi*
    obj*:*
    fun:*MPI*Init
}
{
    Invalid write in start_thread (found in RHEL 6.0)
    Memchkr:Invalid0
    fun:*thread_freeres*
    fun:*thread_freeres*
    obj:libpthread.so*
}
{
    Leak having to do with tracking number of caught/uncaught exceptions by compiler
    Memchkr:Leak
    fun:__cxa_get_globals
}
{
    Reachable leak having to do with C run-time (fwrite/file_doallocate)
    Memchkr:Leak
    fun:_IO_file_doallocate
}
{
    Reachable leak having to do with C run-time (fwrite/file_doallocate) (2)
    Memchkr:Leak
    fun:mmap
    fun:_IO_file_doallocate
}
{
    Reachable leak in libc having to do with use of environment
    Memchkr:Leak
    fun:__add_to_environ
}
{
    Reachable leak in libc having to do with use of environment (2)
    Memchkr:Leak
    fun:tsearch
    fun:__add_to_environ
}
{
    Reachable leak in libc having to do with sysconf
    Memchkr:Leak
    fun:strdup
    obj*:*
    fun:sysconf
}
{
    Uninit in kernel 3.0 libc
    Memchkr:Uninit0
    fun:*rawmemchr*
    fun:*IO_str_init_static_internal
    fun:*sscanf
}
{
    Reachable leak having to do with Fortran's use of setenv/unsetenv
    Memchkr:Leak
    obj*:libc.so*
    fun:__kmp_env_set
}
{
    Uninit16 having to do with Fortran function __kmp_env_get when it calls __strncpy_ssse3 (made it an Uninit0 since we don't care what size it occurs for)
    Memchkr:Uninit0
    obj*:libc.so*
    fun:__kmp_env_get
}
{
    Invalid16 having to do with Fortran function __kmp_env_get when it calls __strncpy_ssse3 (made it an Uninit0 since we don't care what size it occurs for)
    Memchkr:Invalid0
    obj*:libc.so*
    fun:__kmp_env_get
}
{
    Reachable leak in probe mode having to do with exceptions
    Memchkr:LeakProbe
    fun:__deregister_frame
}
{
    Reachable leak in probe mode having to do with exceptions (initiated via __cxa_throw--may only be needed for probe mode, but reasonable for JIT mode too)
    Memchkr:Leak
    obj*:libgcc*
    fun:_Unwind_RaiseException
}
{
    Reachable leak in probe mode having to do with exceptions (initiated via __cxa_throw--for 64-bit and sometimes 32-bit, don't have full call stack info)
    Memchkr:LeakProbe
    fun:_Unwind_Backtrace
}
{
    Reachable leaks having to do with setlocale
    Memchkr:Leak
    obj*:libc*
    fun:setlocale
}
{
    Reachable leaks having to do with bindtextdomain
    Memchkr:Leak
    obj*:libc*
    fun:bindtextdomain
}
{
    Reachable leaks having to do with bind_textdomain_codeset
    Memchkr:Leak
    obj*:libc*
    fun:bind_textdomain_codeset
}
{
    Reachable leaks having to do with textdomain
    Memchkr:Leak
    obj*:libc*
    fun:textdomain
}
{
    Reachable leak having to do with g_*_type_register_static
    Memchkr:Leak
    fun:g_*
    fun:g_*_type_register_static
}
{
    Reachable leak having to do with g_type_init* (including g_type_init_with_debug_flags)
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:g_type_init*
}
{
    Reachable leak having to do with g_type_init* (including g_type_init_with_debug_flags) (2)
    Memchkr:Leak
    fun:allocator_add_slab
    obj*:*
    fun:g_type_init*
}
{
    Reachable leak having to do with g_value_register_transform_func
    Memchkr:Leak
    fun:g_*
    fun:g_value_register_transform_func
}
{
    Reachable leak having to do with g_thread_init
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:g_thread_init
}
{
    Reachable leak having to do with g_thread_init (2)
    Memchkr:Leak
    fun:allocator_add_slab
    obj*:*
    fun:g_thread_init
}
{
    Reachable leak having to do with g_strerror
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:g_strerror
}
{
    Reachable leak having to do with g_set_prgname
    Memchkr:Leak
    fun:g_*
    obj*:*
    fun:g_set_prgname
}
{
    Reachable leak having to do with ctime/asctime, etc
    Memchkr:Leak
    obj*:libc*
    fun:tzset_internal
}
{
    Reachable leak having to do with adjtime, etc
    Memchkr:Leak
    obj*:libc*
    fun:tzset
}
{
    Invalid munmap that originates from Intel 12.1 compiler OpenMP library with Fortran (in munmap)
    Memchkr:Free
    obj*:libc*
    fun:_Z*rml*internal*UnmapMemory*
}
{
    Reachable leak that originates from Intel 12.1 compiler OpenMP library with Fortran (strdup)
    Memchkr:Leak
    obj*:libc*
    fun:_Z*__kmp_itt_thr_name_set_init*
}
{
    Reachable leak inside OMP library with Fortran
    Memchkr:Leak
    fun:*strdup*
    fun:*__kmp_itt_thr_ignore_init_*
    fun:*__kmp_launch_monitor*
}
{
    Reachable leak inside OMP library with Fortran  (itt_thread_ignore/strdup)
    Memchkr:Leak
    fun:*strdup*
    fun:*__itt_thr_ignore*
}
{
    Reachable leak inside OMP library with Fortran  (itt_thr_ignore)
    Memchkr:Leak
    fun:*__itt_thr_ignore*
}
{
    Reachable leak inside OMP library with Fortran  (itt_thread_set_name)
    Memchkr:Leak
    fun:*__itt_thread_set_name*
}
{
    Reachable leak inside OMP library with Fortran  (itt_thread_set_name/strdup)
    Memchkr:Leak
    fun:*strdup*
    fun:*__itt_thread_set_name*
}
{
    Reachable leak inside libc (ttyname)
    Memchkr:Leak
    fun:ttyname
}
{
    Reachable leak inside libc (getpwuid_r, cuserid, getlogin)
    Memchkr:Leak
    obj:libc*
    obj*:*
    fun:getpwuid_r
}
{
    Uninit read inside libc (getpwuid_r, cuserid, getlogin)
    Memchkr:Uninit0
    obj*:*
    fun:getpwuid_r
}
{
    Reachable leak inside libc (iconv_open)
    Memchkr:Leak
    obj*:libc*
    fun:iconv_open
}
{
    Reachable leak inside libc (iconv_open), probe mode
    Memchkr:LeakProbe
    fun:__gconv_load_cache
}
{
    Reachable leak inside libc (iconv_open on Ubuntu), probe mode
    Memchkr:LeakProbe
    fun:__gconv_get_alias_db
}
{
    Invalids having to do with TBB internal memory that is used outside of an allocator (under mallocThreadShutdownNotification/mallocProcessShutdownNotification when process exits)
    Memchkr:Invalid0
    obj*:libtbbmalloc*
    fun:*malloc*ShutdownNotification*
}
{
    Invalids having to do with TBB internal memory that is used outside of an allocator (in mallocThreadShutdownNotification/mallocProcessShutdownNotification when process exits)
    Memchkr:Invalid0
    fun:*malloc*ShutdownNotification*
}
{
    Invalids having to do with TBB internal memory that is used outside of an allocator
    Memchkr:Invalid0
    obj*:libtbbmalloc*
    fun:*onThreadShutdown*
}
## suppressions for CQs from IXEonIXE
{
    PartialUninit in wxGenericTreeCtrl::CalculateLevel called from libwx_gtk2d-2.8.so.0 // DPD200276160:read 4 byte for short
    Memchkr:PartialUninit0
    fun:*wxGenericTreeCtrl*CalculateLevel*
}
{
    PartialUninit in CreateWidgetStyle called from libwx_gtk2d-2.8.so.0 // DPD200276142
    Memchkr:PartialUninit0
    fun:*CreateWidgetStyle*
    obj:libwx_gtk*.so*
}
{
    PartialUninit in wxColourRefData called from libwx_gtk2d-2.8.so.0 // DPD200276142
    Memchkr:PartialUninit0
    fun:*wxColourRefData*
    obj:libwx_gtk*.so*
}
{
    PartialUninit in gdk_gc_set_*ground called from libwx_gtk2d-2.8.so.0 // DPD200276142
    Memchkr:PartialUninit0
    fun:*gdk_gc_set_*ground*
    obj:libwx_gtk*.so*
}
# This may result in false-negatives
{
    Uninit in vector resize called from HeaderCtrl::initialize // DPD200276141
    Memchkr:Uninit0
    obj4:*
    fun:*vector*insert*
    fun:*vector*resize*
}
# This may result in false-negatives
{
    PartialUninit in vector push_back called for marker_t & SummaryInfo // DPD200276155
    Memchkr:PartialUninit0
    obj:*
    fun:*_Construct*
    fun:*_uninitialized_copy*
}
{
    Memory leak in tcache_init (see LIBC bugtracker: https://sourceware.org/bugzilla/show_bug.cgi?id=25288)
    Memchkr:Leak
    fun:*tcache_init*
    fun:*malloc*
}
{
    Invalid access in tcache_init
    Memchkr:Invalid0
    fun:*tcache_init*
    fun:*malloc*
}
{
    Invalid access from Fortran
    Memchkr:Invalid0
    fun:*malloc*
    fun:for__get_vm
}
{
    Invalid access in freeres
    Memchkr:Invalid0
    fun:*malloc_arena_thread_freeres*
}
{
    Excess calls of free in thread resource release
    Memchkr:Free
    fun:*malloc_arena_thread_freeres*
    obj:libpthread*
}
{
    Uninit read in malloc
    Memchkr:Uninit0
    frm:libc.so*!*malloc
}
{
    Invalid access in free
    Memchkr:Invalid0
    frm:libc.so*!*free
}
{
    Uninit read in register_tm_clones
    Memchkr:Uninit0
    fun:register_tm_clones
}
{
    Uninit read in _IO_file_*
    Memchkr:Uninit0
    frm:libc.so*!*IO_file_*
}
{
    Invalid access in fflush
    Memchkr:PartialUninit0
    fun*:*
    frm:*libc.so*!*fflush*
}
{
    Invalid access in fflush
    Memchkr:Invalid0
    fun*:*
    frm:*libc.so*!*fflush*
}
{
    Invalid access in fflush
    Memchkr:Invalid0
    frm:*libc.so*!*fflush*
}
{
    Invalid access in call_init
    Memchkr:Invalid0
    fun:*
    fun:*call_init.*
}
{
    Uninit read in dl functions
    Memchkr:Uninit0
    fun:*libc_dlopen_mode*
}
{
    Uninit read in dl functions
    Memchkr:Uninit0
    fun:*libc_dlsym*
}
{
    Invalid access in Fortran
    Memchkr:Invalid0
    fun*:*
    fun:for__open_proc
}
{
    Invalid accesses under libc.so.6!__libc_thread_freeres (it is deallocation of memory chunks marked as free)
    Memchkr:Invalid0
    obj*:libc*
    frm:libc*!__libc_thread_freeres
}
{
    Partially invalid accesses under libc.so.6!__libc_thread_freeres (it is deallocation of memory chunks marked as free)
    Memchkr:PartialInvalid0
    obj*:libc*
    frm:libc*!__libc_thread_freeres
}
{
    Uninitialized read under libc.so.6!__libc_thread_freeres
    Memchkr:Uninit0
    obj*:libc*
    frm:libc*!__libc_thread_freeres
}
{
    False report on incorrect memcpy call in __getdents (awaiting solution on mantis 4892)
    Memchkr:Param
    obj:libc*
    frm:libc*!readdir
}
{
    Invalid accesses in libc.so.6 called by libpthread.so.0!start_thread
    Memchkr:Invalid0
    obj*:libc*
    frm:libpthread.*!start_thread
}
{
    Uninitialized reads in libc.so.6 called by libpthread.so.0!start_thread
    Memchkr:Uninit0
    obj*:libc*
    frm:libpthread.*!start_thread
}
{
    Leak in probe mode inside of libc.so!tcache_init
    Memchkr:LeakProbe
    frm:libc.so*!tcache_init*
}
{
    Leak in probe mode inside of libc.so!new_heap
    Memchkr:Leak
    frm:libc.so*!new_heap
}