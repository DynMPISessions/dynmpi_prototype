<?xml version="1.0" encoding="utf-8"?>
<!--

 Copyright Â© 2009-2021 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<xmc version="1.1">
<catalog name="collectdlg_xe"  lang='en'>
  <msg name='dlg.collect.mc1'>Does my target leak memory?</msg>
  <msg name='dlg.collect.mc2'>Does my target have memory access problems?</msg>
  <msg name='dlg.collect.mc3'>Where are the memory access problems?</msg>
  <msg name='dlg.collect.tc1'>Does my target have deadlocks?</msg>
  <msg name='dlg.collect.tc2'>Does my target have deadlocks or data races?</msg>
  <msg name='dlg.collect.tc3'>Where are the deadlocks or data races?</msg>
  <msg name='dlg.collect.mc1_slowdown'>2x-20x</msg>
  <msg name='dlg.collect.mc2_slowdown'>10x-40x</msg>
  <msg name='dlg.collect.mc3_slowdown'>20x-80x</msg>
  <msg name='dlg.collect.tc1_slowdown'>10x-40x</msg>
  <msg name='dlg.collect.tc2_slowdown'>20x-80x</msg>
  <msg name='dlg.collect.tc3_slowdown'>40x-160x</msg>
  <msg name='dlg.collect.picture_note'>Analysis Time Overhead</msg>
  <msg name='dlg.collect.mem_note'>Memory Overhead</msg>
  <msg name='dlg.collect.default_mark'>(default)</msg>
  <msg name='dlg.collect.debugger.mode'>Analysis Execution Mode</msg>
  <msg name='dlg.collect.off.short'>Analyze without debugger</msg>
  <msg name='dlg.collect.off.description'>Run an analysis and report all detected problems. Use to view correctness issues without stopping in the debugger to examine them.</msg>
  <msg name='dlg.collect.on.error.short'>Enable debugger when problem detected</msg>
  <msg name='dlg.collect.on.error.description.runmc'>Run an analysis under the debugger and stop every time a problem is detected. Use to allow investigation of every problem detected.</msg>
  <msg name='dlg.collect.on.error.description.runtc'>Run an analysis under the debugger and stop every time a problem is detected. Use to allow investigation of every problem detected. Not recommended when running a threading analysis because of extremely slow execution time.</msg>
  <msg name='dlg.collect.on.error.description'>Run an analysis under the debugger and stop every time a problem is detected. Use to allow investigation of every problem detected. Not recommended when running a threading analysis because of extremely slow execution time.</msg>
  <msg name='dlg.collect.paused.short'>Select analysis start location with debugger</msg>
  <msg name='dlg.collect.paused.description'>Run target application under the debugger with analysis disabled until you choose to turn on analysis. Before starting, set a code breakpoint to stop execution prior to where you want analysis to begin. Select Debug &gt; Continue with Inspector XE Analysis to resume execution and begin analysis. Use to quickly reach a problem of interest.</msg>
  <msg name='dlg.collect.paused.description.linux'>Run target application under the debugger with analysis disabled until you choose to turn on analysis. Execution stops at the application entry point. Set a code breakpoint to stop execution prior to where you want analysis to begin, execute to this point, then use the 'monitor begin-analysis' command to turn on analysis for all subsequent execution. Use to quickly reach a problem of interest.</msg>
  <msg name='dlg.collect.on.start.short'>Enable debugger when target application starts</msg>
  <msg name='dlg.collect.on.start.description'>Run with analysis enabled and stop when target application starts.</msg>
  <msg name='dlg.collect.no.custom.analysis'>No custom analysis types found. You can create a custom analysis type based on a selected preset analysis type.</msg>
</catalog>
</xmc>
