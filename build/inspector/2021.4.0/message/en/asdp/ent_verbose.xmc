<?xml version='1.0' encoding='utf-8' ?>
<!--

 Copyright Â© 2009-2021 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<xmc version='1.1'>
    <catalog name='asdp.ent_verbose' lang='en'>
     <msg name='pdr_thr_create'>Thread start information</msg>
     <msg name='pdr_race_ww'>Data race at data location
    		<arg name='object_addr' /> for threads <arg name='best_thrdata1' />
		and <arg name='best_thrdata2' /></msg>
     <msg name='pdr_race_rw'>Data race at data location
    		<arg name='object_addr' /> for threads <arg name='best_thrdata1' />
		and <arg name='best_thrdata2' /></msg>
     <msg name='pdr_race_wr'>Data race at data location
    		<arg name='object_addr' /> for threads <arg name='best_thrdata1' />
		and <arg name='best_thrdata2' /></msg>
     <msg name='pdr_mem_sharable'>Data Shared</msg>
     <msg name='pdr_sync_deadlock'>Deadlock between thread <arg name='best_thrdata1' />
    		and thread <arg name='best_thrdata2' /></msg>
     <msg name='pdr_sync_cycle'>Lock hierarchy violation between thread <arg name='best_thrdata1' />
    		and thread <arg name='best_thrdata2' /></msg>
     <msg name='pdr_sync_order'>Out-of-order lock release</msg>
     <msg name='pdr_thr_terminate_deadlock'>The application was forcefully terminated</msg>
     <msg name='pdr_mem_ctsa'>Stack owned by thread <arg name='best_thrdata2' />
    		accessed by thread <arg name='best_thrdata1' /></msg>
     <msg name='pdr_lock_dangling'>Dangling lock</msg>
     <msg name='pdr_lock_uninit'>Uninitialized lock</msg>
     <msg name='pdr_task_orphaned'>Orphaned task</msg>
     <msg name='pdr_task_dangling'>Missing end task</msg>
     <msg name='pdr_task_nobegin'>Missing start task</msg>
     <msg name='pdr_site_dangling'>Missing end site</msg>
     <msg name='pdr_site_nobegin'>Missing start site</msg>
     <msg name='pdr_dependence_flow'>Data communication</msg>
     <msg name='pdr_dependence_anti'>Memory reuse</msg>
     <msg name='pdr_dependence_output'>Memory reuse</msg>
     <msg name='pdr_lock_inconsistent_rw'>Inconsistent lock use</msg>
     <msg name='pdr_lock_inconsistent_ww'>Inconsistent lock use</msg>
     <msg name='pdr_lock_inconsistent_wr'>Inconsistent lock use</msg>
     <msg name='pdr_lock_inconsistent_rr'>Inconsistent lock use</msg>
     <msg name='pdr_observe_read'>Memory watch</msg>
     <msg name='pdr_observe_write'>Memory watch</msg>
     <msg name='pdr_observe_update'>Memory watch</msg>
     <msg name='pdr_sync_cycle_whatif'>Lock hierarchy violation</msg>
     <msg name='pdr_thr_create_whatif'>Thread start information</msg>
     <msg name='pdr_site_create'>Parallel site information</msg>
     <msg name='pdr_thr_death'>Thread exit information</msg>
     <msg name='pdr_app_exception'>Unhandled application exception</msg>
     <msg name='pdr_thr_start'>Thread information</msg>
     <msg name='pdr_thr_create_whatif'>Thread start information</msg>
     <msg name='pdr_thr_death_whatif'>Thread exit information</msg>
     <msg name='pdr_site_create'>Parallel site information</msg>
     <msg name='pdr_dependence_flow'>Read after write dependency</msg>
     <msg name='pdr_dependence_anti'>Write after read dependency</msg>
     <msg name='pdr_dependence_output'>Write after write dependency</msg>
     <msg name='pdr_lock_inconsistent_rw'>Inconsistent lock use</msg>
     <msg name='pdr_lock_inconsistent_ww'>Inconsistent lock use</msg>
     <msg name='pdr_lock_inconsistent_wr'>Inconsistent lock use</msg>
     <msg name='pdr_lock_inconsistent_rr'>Inconsistent lock use</msg>
     <msg name='pdr_lock_uninit'>Uninitialized lock</msg>
     <msg name='pdr_task_orphaned'>Orphaned task</msg>
     <msg name='pdr_task_dangling'>Missing end task</msg>
     <msg name='pdr_task_nobegin'>Missing start task</msg>
     <msg name='pdr_site_dangling'>Missing end site</msg>
     <msg name='pdr_site_nobegin'>Missing start site</msg>
     <msg name='pdr_lock_dangling'>Dangling lock</msg>
     <msg name='pdr_sync_cycle_whatif'>Lock hierarchy violation</msg>
     <msg name='pdr_sync_deadlock_whatif'>Deadlock</msg>
     <msg name='pdr_thr_terminate_deadlock_whatif'>The application was forcefully terminated</msg>
     <msg name='pdr_observe_read'>Memory watch</msg>
     <msg name='pdr_observe_write'>Memory watch</msg>
     <msg name='pdr_observe_update'>Memory watch</msg>
     <msg name='pdr_app_exception_whatif'>Unhandled application exception</msg>
     <msg name='pdr_thr_start_whatif'>Thread information</msg>
     <msg name='pdr_dependence_flow_child'>Data communication</msg>
     <msg name='pdr_dependence_anti_child'>Memory reuse</msg>
     <msg name='pdr_dependence_output_child'>Memory reuse</msg>
     <msg name='pdr_task_none'>No tasks in parallel site</msg>
     <msg name='pdr_task_one'>One task in parallel site</msg>
     <msg name='pdr_dependence_potential_anti'>Potential write after read dependency</msg>
     <msg name='pdr_dependence_potential_output'>Potential write after write dependency</msg>
     <msg name='pdr_reduction'>Potential reduction</msg>
     <msg name='pdr_mem_uninit_read'>Uninitialized memory access at
    		<arg name='addr_arg' /> for thread <arg name='best_thrdata1' /></msg>
     <msg name='pdr_mem_uninit_partial_read'>Uninitialized partial memory access at
    		<arg name='addr_arg' /> for thread <arg name='best_thrdata1' /></msg>
     <msg name='pdr_mem_invalid_read'>Invalid memory access at
    		<arg name='addr_arg' /> for thread <arg name='best_thrdata1' /></msg>
     <msg name='pdr_mem_invalid_partial_read'>Invalid partial memory access at
    		<arg name='op_addr' /> for thread <arg name='best_thrdata1' /></msg>
     <msg name='pdr_mem_invalid_write'>Invalid memory access at
    		<arg name='op_addr' /> for thread <arg name='best_thrdata1' /></msg>
     <msg name='pdr_munmap_notmapped'>Invalid deallocation for thread <arg name='best_thrdata1'/></msg>
     <msg name='pdr_munmap_allocated'>Mismatched allocation/deallocation for thread <arg name='best_thrdata1'/></msg>
     <msg name='pdr_dealloc_mapped'>Mismatched allocation/deallocation for thread <arg name='best_thrdata1'/></msg>
     <msg name='pdr_dealloc_invalid'>Missing allocation for thread <arg name='best_thrdata1'/></msg>
     <msg name='pdr_dealloc_mismatch'>Mismatched allocation/deallocation for thread <arg name='best_thrdata1'/></msg>
     <msg name='pdr_leaked'>Memory leak</msg>
     <msg name='pdr_call_invalid'>Incorrect memcpy call for thread <arg name='best_thrdata1'/></msg>
     <msg name='pdr_dealloc_mismatch_explicitheap'>Mismatched allocation/deallocation for thread <arg name='best_thrdata1'/></msg>
     <msg name='pdr_dealloc_mismatch_crtheap'>Mismatched allocation/deallocation for thread <arg name='best_thrdata1'/></msg>
     <msg name='pdr_reachable_leak'>Memory not deallocated</msg>
     <msg meta='unofficial' name='pdr_dangerous_mmap'>Dangerous mmap call</msg>
     <msg name='pdr_acc_token_leaked'>Kernel resource leak</msg>
     <msg name='pdr_chng_ntfy_leaked'>Kernel resource leak</msg>
     <msg name='pdr_crit_sec_leaked'>Kernel resource leak</msg>
     <msg name='pdr_desktop_leaked'>Kernel resource leak</msg>
     <msg name='pdr_event_log_leaked'>Kernel resource leak</msg>
     <msg name='pdr_file_or_device_leaked'>Kernel resource leak</msg>
     <msg name='pdr_find_leaked'>Kernel resource leak</msg>
     <msg name='pdr_kernel_obj_leaked'>Kernel resource leak</msg>
     <msg name='pdr_mem_res_ntfy_leaked'>Kernel resource leak</msg>
     <msg name='pdr_module_leaked'>Kernel resource leak</msg>
     <msg name='pdr_proc_or_thr_leaked'>Kernel resource leak</msg>
     <msg name='pdr_synch_obj_leaked'>Kernel resource leak</msg>
     <msg name='pdr_upd_res_leaked'>Kernel resource leak</msg>
     <msg name='pdr_win_station_leaked'>Kernel resource leak</msg>
     <msg name='pdr_dc_leaked'>GDI resource leak</msg>
     <msg name='pdr_drawing_obj_leaked'>GDI resource leak</msg>
     <msg name='pdr_metafile_leaked'>GDI resource leak</msg>
     <msg name='pdr_metafile_dc_leaked'>GDI resource leak</msg>
     <msg name='pdr_accel_table_leaked'>User resource leak</msg>
     <msg name='pdr_caret_leaked'>User resource leak</msg>
     <msg name='pdr_cursor_leaked'>User resource leak</msg>
     <msg name='pdr_dde_conv_leaked'>User resource leak</msg>
     <msg name='pdr_icon_leaked'>User resource leak</msg>
     <msg name='pdr_menu_leaked'>User resource leak</msg>
     <msg name='pdr_window_leaked'>User resource leak</msg>
     <msg name='pdr_wnd_pos_leaked'>User resource leak</msg>
     <msg name='pdr_wnd_hook_leaked'>User resource leak</msg>
     <msg name='pdr_socket_leaked'>Kernel resource leak</msg>
     <msg name='pdr_invalid_kernel_arg'>Invalid kernel argument</msg>
     <msg name='pdr_host_ptr_on_device'>A host pointer is used on a device</msg>
     <msg name='pdr_ptr_from_other_device'>A pointer from another device is used</msg>
     <msg name='pdr_mismatch_queue'>Mismatched queue</msg>
     <msg name='pdr_non_host_ptr'>A non-host pointer is used when a host pointer is expected</msg>
     <msg name='pdr_async_buffer'>Asynchronous buffer usage</msg>
     <msg name='pdr_invalid_kernel_arg_size'>Invalid size of kernel arguments</msg>
    </catalog>
</xmc>
