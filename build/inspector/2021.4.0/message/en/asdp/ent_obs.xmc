<?xml version='1.0' encoding='utf-8' ?>
<!--

 Copyright Â© 2009-2021 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<xmc version='1.1'>
    <catalog name='asdp.ent_obs' lang='en'>
        <msg name='allocation'>Allocation site</msg>
        <msg name='deallocation'>Deallocation site</msg>
        <msg name='obs_call_thr1'>Invalid memcpy arguments</msg>
        <msg name='obs_data_serial_alloc'>Allocation site</msg>
        <msg name='obs_data_serial_read'>Read</msg>
        <msg name='obs_data_serial_write'>Write</msg>
        <msg name='obs_data_serial_construct'>Parallel site</msg>
        <msg name='obs_data_capture_alloc'>Allocation site</msg>
        <msg name='obs_data_capture_read'>Read</msg>
        <msg name='obs_data_capture_write'>Write</msg>
        <msg name='obs_data_capture_construct'>Parallel site</msg>
        <msg name='obs_dealloc_alloc'>Allocation site</msg>
        <msg name='obs_dealloc_free'>Deallocation site</msg>
        <msg name='obs_dealloc_invalid'>Invalid deallocation site</msg>
        <msg name='obs_dealloc_mismatch'>Mismatched deallocation site</msg>
        <msg name='obs_dealloc_mismatch_crtheap'>Mismatched deallocation site - CRT Heap</msg>
        <msg name='obs_dealloc_mismatch_explicitheap'>Mismatched deallocation site - Explicit Heap</msg>
        <msg name='obs_dealloc_mapped'>Invalid dealllocation site - address is mapped</msg>
        <msg name='obs_reachable_leak_alloc'>Allocation site</msg>
        <msg name='obs_reachable_leak_free'>*unused*</msg>
        <msg name='obs_reachable_leak_thr1'>*unused*</msg>
        <msg name='obs_leaked_alloc'>Allocation site</msg>
        <msg name='obs_leaked_free'>*unused*</msg>
        <msg name='obs_leaked_thr1'>*unused*</msg>
        <msg name='obs_int_leaked_alloc'>Allocation site</msg>
        <msg name='obs_int_start_thr1'>Start site</msg>
        <msg name='obs_int_end_thr1'>End site</msg>
        <msg name='obs_acc_token_creation_site'>Access token creation site</msg>
        <msg name='obs_chng_ntfy_creation_site'>Change notification handle creation site</msg>
        <msg name='obs_crit_sec_creation_site'>Critical section creation site</msg>
        <msg name='obs_desktop_creation_site'>Desktop handle creation site</msg>
        <msg name='obs_event_log_creation_site'>Event log handle creation site</msg>
        <msg name='obs_file_or_device_creation_site'>File or device handle creation site</msg>
        <msg name='obs_find_creation_site'>Find handle creation site</msg>
        <msg name='obs_kernel_obj_creation_site'>Kernel object handle creation site</msg>
        <msg name='obs_mem_res_ntfy_creation_site'>Memory resource notification handle creation site</msg>
        <msg name='obs_module_creation_site'>Module handle creation site</msg>
        <msg name='obs_proc_or_thr_creation_site'>Process or thread handle creation site</msg>
        <msg name='obs_synch_obj_creation_site'>Synchronization object handle creation site</msg>
        <msg name='obs_upd_res_creation_site'>Update resource handle creation site</msg>
        <msg name='obs_win_station_creation_site'>Window station handle creation site</msg>
        <msg name='obs_dc_creation_site'>Device context handle creation site</msg>
        <msg name='obs_drawing_obj_creation_site'>Drawing object handle creation site</msg>
        <msg name='obs_metafile_creation_site'>Metafile handle creation site</msg>
        <msg name='obs_metafile_dc_creation_site'>Device context handle creation site</msg>
        <msg name='obs_accel_table_creation_site'></msg>
        <msg name='obs_caret_creation_site'>Caret handle creation site</msg>
        <msg name='obs_cursor_creation_site'>Cursor handle creation site</msg>
        <msg name='obs_dde_conv_creation_site'>DDE conversation handle creation site</msg>
        <msg name='obs_icon_creation_site'>Icon handle creation site</msg>
        <msg name='obs_menu_creation_site'>Menu handle creation site</msg>
        <msg name='obs_window_creation_site'>Window handle creation site</msg>
        <msg name='obs_wnd_pos_creation_site'>Window position handle creation site</msg>
        <msg name='obs_wnd_hook_creation_site'>Windows hook handle creation site</msg>
        <msg name='obs_socket_creation_site'>Socket creation site</msg>
        <msg name='obs_lock_dangling_alloc'>Allocation site</msg>
        <msg name='obs_lock_dangling_free'>Deallocation site</msg>
        <msg name='obs_lock_dangling_site'>Parallel site</msg>
        <msg name='obs_lock_dangling_thr1'>Lock owned</msg>
        <msg name='obs_lock_inconsistent_alloc'>Allocation site</msg>
        <msg name='obs_lock_inconsistent_free'>Deallocation site</msg>
        <msg name='obs_lock_inconsistent_read'>Read</msg>
        <msg name='obs_lock_inconsistent_write'>Write</msg>
        <msg name='obs_lock_inconsistent_construct'>Parallel site</msg>
        <msg name='obs_lock_uninit_alloc'>Allocation site</msg>
        <msg name='obs_lock_uninit_free'>Deallocation site</msg>
        <msg name='obs_lock_uninit_site'>Parallel site</msg>
        <msg name='obs_lock_uninit_thr1'>Lock used</msg>
        <msg name='obs_lockset1_defined'>First access lock defined</msg>
        <msg name='obs_lockset2_defined'>Second access lock defined</msg>
        <msg name='obs_lockset2_thread'>Second access lock acquired</msg>
        <msg name='obs_mem_ctsa_alloc'>Allocation site</msg>
        <msg name='obs_mem_ctsa_owner'>Stack owned</msg>
        <msg name='obs_mem_ctsa_accessor'>Stack cross access</msg>
        <msg name='obs_mem_invalid_alloc'>Allocation site</msg>
        <msg name='obs_mem_invalid_free'>Deallocation site</msg>
        <msg name='obs_mem_invalid_read'>Read</msg>
        <msg name='obs_mem_invalid_write'>Write</msg>
        <msg name='obs_mem_invalid_partial_alloc'>Allocation site</msg>
        <msg name='obs_mem_invalid_partial_free'>Deallocation site</msg>
        <msg name='obs_mem_invalid_partial_read'>Read</msg>
        <msg name='obs_mem_sharable_alloc'>Allocation site</msg>
        <msg name='obs_mem_sharable_free'>Deallocation site</msg>
        <msg name='obs_mem_sharable_thr1'>Access site</msg>
        <msg name='obs_mem_sharable_thr2'>Access site</msg>
        <msg name='obs_mem_uninit_alloc'>Allocation site</msg>
        <msg name='obs_mem_uninit_free'>Deallocation site</msg>
        <msg name='obs_mem_uninit_read'>Read</msg>
        <msg name='obs_mem_uninit_partial_alloc'>Allocation site</msg>
        <msg name='obs_mem_uninit_partial_free'>Deallocation site</msg>
        <msg name='obs_mem_uninit_partial_read'>Read</msg>
        <msg name='obs_munmap_alloc'>Allocation site</msg>
        <msg name='obs_munmap_free'>Deallocation site</msg>
        <msg name='obs_munmap_allocated'>Allocation site</msg>
        <msg name='obs_munmap_notmapped'>Invalid deallocation</msg>
        <msg name='obs_observe_start'>Watch start</msg>
        <msg name='obs_observe_read'>Read</msg>
        <msg name='obs_observe_write'>Write</msg>
        <msg name='obs_observe_update'>Update</msg>
        <msg name='obs_observe_construct'>Parallel site</msg>
        <msg name='obs_race_alloc'>Allocation site</msg>
        <msg name='obs_race_free'>Deallocation site</msg>
        <msg name='obs_race_write'>Write</msg>
        <msg name='obs_race_read'>Read</msg>
        <msg name='obs_race_alloc_g1'>HINT: Synchronization allocation site</msg>
        <msg name='obs_race_alloc_g2'>HINT: Synchronization allocation site</msg>
        <msg name='obs_site_create_construct'>Parallel site</msg>
        <msg name='obs_site_dangling_start'>Start site</msg>
        <msg name='obs_site_nobegin_construct'>Parallel site</msg>
        <msg name='obs_site_nobegin_end'>End site</msg>
        <msg name='obs_storage_reuse_alloc'>Allocation site</msg>
        <msg name='obs_storage_reuse_write'>Write</msg>
        <msg name='obs_storage_reuse_read'>Read</msg>
        <msg name='obs_storage_reuse_construct'>Parallel site</msg>
        <msg name='obs_storage_flow_alloc'>Allocation site</msg>
        <msg name='obs_storage_flow_read'>Read</msg>
        <msg name='obs_storage_flow_write'>Write</msg>
        <msg name='obs_storage_flow_construct'>Parallel site</msg>
        <msg name='obs_storage_output_alloc'>Allocation site</msg>
        <msg name='obs_storage_output_write'>Write</msg>
        <msg name='obs_storage_output_construct'>Parallel site</msg>
        <msg name='obs_sync_cycle_alloc'>Allocation site</msg>
        <msg name='obs_sync_cycle_acquire1'>Lock owned</msg>
        <msg name='obs_sync_cycle_acquire2'>Lock owned</msg>
        <msg name='obs_sync_cycle_construct'>Parallel site</msg>
        <msg name='obs_sync_cycle_whatif_alloc'>Allocation site</msg>
        <msg name='obs_sync_cycle_whatif_acquire1'>Lock owned</msg>
        <msg name='obs_sync_cycle_whatif_acquire2'>Lock owned</msg>
        <msg name='obs_sync_cycle_whatif_construct'>Parallel site</msg>
        <msg name='obs_sync_deadlock_alloc'>Allocation site</msg>
        <msg name='obs_sync_deadlock_acquire1'>Lock owned</msg>
        <msg name='obs_sync_deadlock_acquire2'>Lock wanted</msg>
        <msg name='obs_sync_deadlock_construct'>Parallel site</msg>
        <msg name='obs_sync_order_alloc'>Allocation site</msg>
        <msg name='obs_sync_order_release1'>Lock released</msg>
        <msg name='obs_sync_order_release2'>Lock owned</msg>
        <msg name='obs_task_dangling_start_task'>Task start</msg>
        <msg name='obs_task_dangling_site'>Parallel site</msg>
        <msg name='obs_task_nobegin_end_task'>Task end</msg>
        <msg name='obs_task_nobegin_site'>Parallel site</msg>
        <msg name='obs_task_orphaned_start_task'>Task start</msg>
        <msg name='obs_task_one_site'>Parallel site</msg>
        <msg name='obs_task_none_site'>Parallel site</msg>
        <msg name='obs_thr_create_alloc'>*unused*</msg>
        <msg name='obs_thr_create_free'>*unused*</msg>
        <msg name='obs_thr_create_thr1'>Creation site</msg>
        <msg name='obs_thr_death_thr1'>Exit site</msg>
        <msg name='obs_exception_whatif_site'>Parallel site</msg>
        <msg name='obs_exception_whatif_thr1'>Exception</msg>
        <msg name='obs_exception_thr1'>Exception</msg>
        <msg name='obs_thr_start_entry'>Entry site</msg>
        <msg name='obs_thr_start_creation'>Creation site</msg>
        <msg name='obs_thr_create_whatif_alloc'>*unused*</msg>
        <msg name='obs_thr_create_whatif_free'>*unused*</msg>
        <msg name='obs_thr_create_whatif_thr1'>Creation site</msg>
        <msg name='obs_thr_create_whatif_construct'>Parallel site</msg>
        <msg name='obs_thr_start_whatif_entry'>Entry site</msg>
        <msg name='obs_thr_start_whatif_creation'>Creation site</msg>
        <msg name='obs_thr_start_whatif_construct'>Parallel site</msg>
        <msg name='obs_thr_death_whatif_thr1'>Exit site</msg>
        <msg name='obs_thr_death_whatif_construct'>Parallel site</msg>
        <msg name='obs_thr_terminate_deadlock'>Termination site</msg>
        <msg name='obs_thr_terminate_deadlock_whatif_construct'>Parallel site</msg>
        <msg name='obs_site_end'>End site</msg>
        <msg name='obs_site'>Parallel site</msg>
        <msg name='obs_uniform_stride_thr1'>Thread 1</msg>
        <msg name='obs_uniform_stride_read_thr1'>Thread 1</msg>
        <msg name='obs_uniform_stride_write_thr1'>Thread 1</msg>
        <msg name='obs_uniform_stride_data_loc'>Construct site</msg>
        <msg name='obs_unit_stride_thr1'>Thread 1</msg>
        <msg name='obs_unit_stride_read_thr1'>Thread 1</msg>
        <msg name='obs_unit_stride_write_thr1'>Thread 1</msg>
        <msg name='obs_unit_stride_data_loc'>Construct site</msg>
        <msg name='obs_const_unit_stride_thr1'>Thread 1</msg>
        <msg name='obs_const_unit_read_stride_thr1'>Thread 1</msg>
        <msg name='obs_const_unit_write_stride_thr1'>Thread 1</msg>
        <msg name='obs_const_unit_stride_data_loc'>Construct site</msg>
        <msg name='obs_variable_stride_thr1'>Thread 1</msg>
        <msg name='obs_variable_read_stride_thr1'>Thread 1</msg>
        <msg name='obs_variable__write_stride_thr1'>Thread 1</msg>
        <msg name='obs_variable_stride_data_loc'>Construct site</msg>
        <msg name='obs_gather_stride_thr1'>Thread 1</msg>
        <msg name='obs_gather_stride_data_loc'>Construct site</msg>
        <msg name='obs_func_call'>Call site</msg>
        <msg name='obs_func_call2'>Call site</msg>
        <msg name='obs_definition'>Allocation site</msg>
        <msg name='obs_x_leaked_alloc'>Allocation site</msg>
        <msg name='obs_x_leaked_free'>Deallocation site</msg>
        <msg name='obs_x_leaked_cons'>Construct site</msg>
        <msg name='obs_x_leaked_thr1'>Thread 1</msg>
        <msg name='obs_x_leaked_thr2'>Thread 2</msg>
        <msg name='obs_x_mem_invalid_alloc'>Allocation site</msg>
        <msg name='obs_x_mem_invalid_free'>Deallocation site</msg>
        <msg name='obs_x_mem_invalid_cons'>Construct site</msg>
        <msg name='obs_x_mem_invalid_thr1'>Thread 1</msg>
        <msg name='obs_x_mem_invalid_thr2'>Thread 2</msg>
        <msg name='obs_x_race_alloc'>Allocation site</msg>
        <msg name='obs_x_race_free'>Deallocation site</msg>
        <msg name='obs_x_race_cons'>Construct site</msg>
        <msg name='obs_x_race_write'>Unprotected write</msg>
        <msg name='obs_x_race_read'>Unprotected read</msg>
        <msg name='obs_x_race_alloc_g1'>Suggested synchronization</msg>
        <msg name='obs_x_race_alloc_g2'>Suggested synchronization</msg>
        <msg name='obs_x_race_lib_alloc'>Allocation site</msg>
        <msg name='obs_x_race_lib_free'>Deallocation site</msg>
        <msg name='obs_x_race_lib_cons'>Construct site</msg>
        <msg name='obs_x_race_lib_thr1'>Thread 1</msg>
        <msg name='obs_x_race_lib_thr2'>Thread 2</msg>
        <msg name='obs_x_race_lib_alloc_g1'>*unused*</msg>
        <msg name='obs_x_race_lib_alloc_g2'>*unused*</msg>
        <msg name='obs_x_sync_cycle_alloc'>Allocation site</msg>
        <msg name='obs_x_sync_cycle_free'>Deallocation site</msg>
        <msg name='obs_x_sync_cycle_cons'>Construct site</msg>
        <msg name='obs_x_sync_cycle_thr1'>Thread 1</msg>
        <msg name='obs_x_sync_cycle_thr2'>Thread 2</msg>
        <msg name='obs_x_sync_dangle_alloc'>Allocation site</msg>
        <msg name='obs_x_sync_dangle_free'>Deallocation site</msg>
        <msg name='obs_x_sync_dangle_cons'>Construct site</msg>
        <msg name='obs_x_sync_dangle_thr1'>Thread 1</msg>
        <msg name='obs_x_sync_dangle_thr2'>Thread 2</msg>
        <msg name='obs_x_sync_notify_alloc'>Allocation site</msg>
        <msg name='obs_x_sync_notify_free'>Deallocation site</msg>
        <msg name='obs_x_sync_notify_cons'>Construct site</msg>
        <msg name='obs_x_sync_notify_thr1'>Thread 1</msg>
        <msg name='obs_x_sync_notify_thr2'>Thread 2</msg>
        <msg name='obs_x_thr_create_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_create_free'>Deallocation site</msg>
        <msg name='obs_x_thr_create_cons'>Construct site</msg>
        <msg name='obs_x_thr_create_thr1'>Thread 1</msg>
        <msg name='obs_x_thr_create_thr2'>Thread 2</msg>
        <msg name='obs_x_thr_death_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_death_free'>Deallocation site</msg>
        <msg name='obs_x_thr_death_cons'>Construct site</msg>
        <msg name='obs_x_thr_death_thr1'>Thread 1</msg>
        <msg name='obs_x_thr_death_thr2'>Thread 2</msg>
        <msg name='obs_x_thr_stall_infinite_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_stall_infinite_free'>Deallocation site</msg>
        <msg name='obs_x_thr_stall_infinite_cons'>Construct site</msg>
        <msg name='obs_x_thr_stall_infinite_thr1'>Thread 1</msg>
        <msg name='obs_x_thr_stall_infinite_thr2'>Thread 2</msg>
        <msg name='obs_x_thr_stall_timed_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_stall_timed_free'>Deallocation site</msg>
        <msg name='obs_x_thr_stall_timed_cons'>Construct site</msg>
        <msg name='obs_x_thr_stall_timed_thr1'>Thread 1</msg>
        <msg name='obs_x_thr_stall_timed_thr2'>Thread 2</msg>
        <msg name='obs_x_thr_terminate_deadlock_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_terminate_deadlock_free'>Deallocation site</msg>
        <msg name='obs_x_thr_terminate_deadlock_cons'>Construct site</msg>
        <msg name='obs_x_thr_terminate_deadlock_thr1'>Thread 1</msg>
        <msg name='obs_x_thr_terminate_deadlock_thr2'>Thread 2</msg>
        <msg name='obs_x_thr_wait_infinite_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_wait_infinite_free'>Deallocation site</msg>
        <msg name='obs_x_thr_wait_infinite_cons'>Construct site</msg>
        <msg name='obs_x_thr_wait_infinite_thr1'>Thread 1</msg>
        <msg name='obs_x_thr_wait_infinite_thr2'>Thread 2</msg>
        <msg name='obs_x_thr_wait_timed_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_wait_timed_free'>Deallocation site</msg>
        <msg name='obs_x_thr_wait_timed_cons'>Construct site</msg>
        <msg name='obs_x_thr_wait_timed_thr1'>Thread 1</msg>
        <msg name='obs_x_thr_wait_timed_thr2'>Thread 2</msg>
        <msg name='obs_x_thr_cdecl_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_cdecl_free'>Deallocation site</msg>
        <msg name='obs_x_thr_cdecl_cons'>Construct site</msg>
        <msg name='obs_x_thr_cdecl_thr1'>Thread 1</msg>
        <msg name='obs_x_thr_cdecl_thr2'>Thread 2</msg>
        <msg name='obs_x_thr_stdcall_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_stdcall_free'>Deallocation site</msg>
        <msg name='obs_x_thr_stdcall_cons'>Construct site</msg>
        <msg name='obs_x_thr_stdcall_thr1'>Thread 1</msg>
        <msg name='obs_x_thr_stdcall_thr2'>Thread 2</msg>
        <msg name='obs_x_race_cons_thread1'>Thread 1</msg>
        <msg name='obs_x_race_cons_thread2'>Thread 2</msg>
        <msg name='obs_x_not_local_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_omp_for_private'>Construct site</msg>
        <msg name='obs_x_thr_notloc_last_writer'>Thread 1</msg>
        <msg name='obs_x_thr_notloc_reader'>Thread 2</msg>
        <msg name='obs_x_par_undef_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_omp_par_undef'>Construct site</msg>
        <msg name='obs_x_thr_par_undef_last_writer'>Thread 1</msg>
        <msg name='obs_x_thr_par_undef_reader'>Thread 2</msg>
        <msg name='obs_x_thr_omp_osec_skip'>Construct site</msg>
        <msg name='obs_x_thr_osec_skip_writer'>Thread 1</msg>
        <msg name='obs_x_thr_osec_skip_reader'>Thread 2</msg>
        <msg name='obs_x_thr_omp_sync_ws_omp_loop_loc'>Construct site</msg>
        <msg name='obs_x_thr_omp_sync_ws_sync_or_master_loc'>Thread 1</msg>
        <msg name='obs_x_thr_omp_sync_ws_loop_body_block_loc'>Thread 2</msg>
        <msg name='obs_x_omp_partial_cmn_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_omp_omp_partial_cmn_construct'>Construct site</msg>
        <msg name='obs_x_thr_omp_partial_cmn_access1'>Thread 1</msg>
        <msg name='obs_x_thr_omp_partial_cmn_access2'>Thread 2</msg>
        <msg name='obs_x_ser_undef_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_omp_ser_undef'>Construct site</msg>
        <msg name='obs_x_thr_omp_ser_undef_last_writer'>Thread 1</msg>
        <msg name='obs_x_thr_omp_ser_undef_reader'>Thread 2</msg>
        <msg name='obs_x_thr_obj_use_create_location'>Construct site</msg>
        <msg name='obs_x_thr_obj_use_create_user'>Thread 1</msg>
        <msg name='obs_x_thr_unlock_not_owned_lock_fn'>Construct site</msg>
        <msg name='obs_x_thr_unlock_not_owned_lock_unlocker'>Thread 1</msg>
        <msg name='obs_x_thr_unlock_not_owned_lock_unlocker_copy'>Thread 2</msg>
        <msg name='obs_x_thr_api_value_arg_fn'>Construct site</msg>
        <msg name='obs_x_thr_api_value_arg_bad_api_caller'>Thread 1</msg>
        <msg name='obs_x_thr_api_value_arg_bad_api_caller_copy'>Thread 2</msg>
        <msg name='obs_x_thr_api_invalid_arg_fn'>Construct site</msg>
        <msg name='obs_x_thr_api_invalid_arg_api_caller'>Thread 1</msg>
        <msg name='obs_x_thr_api_invalid_arg_api_caller_copy'>Thread 2</msg>
        <msg name='obs_x_thr_api_null_arg_fn'>Construct site</msg>
        <msg name='obs_x_thr_api_null_arg_api_caller'>Thread 1</msg>
        <msg name='obs_x_thr_api_null_arg_api_caller_copy'>Thread 2</msg>
        <msg name='obs_x_thr_api_mutex_arg_bad_fn'>Construct site</msg>
        <msg name='obs_x_thr_api_mutex_arg_fn_caller'>Thread 1</msg>
        <msg name='obs_x_thr_api_mutex_arg_fn_caller_copy'>Thread 2</msg>
        <msg name='obs_x_thr_api_event_arg_bad_fn'>Construct site</msg>
        <msg name='obs_x_thr_api_event_arg_fn_caller'>Thread 1</msg>
        <msg name='obs_x_thr_api_event_arg_fn_caller_copy'>Thread 2</msg>
        <msg name='obs_x_thr_api_semaphore_arg_bad_fn'>Construct site</msg>
        <msg name='obs_x_thr_api_semaphore_arg_fn_caller'>Thread 1</msg>
        <msg name='obs_x_thr_api_semaphore_arg_fn_caller_copy'>Thread 2</msg>
        <msg name='obs_x_thr_api_thread_arg_bad_fn'>Construct site</msg>
        <msg name='obs_x_thr_api_thread_arg_fn_caller'>Thread 1</msg>
        <msg name='obs_x_thr_api_thread_arg_fn_caller_copy'>Thread 2</msg>
        <msg name='obs_x_thr_api_thread_arg_bad_fn'>Construct site</msg>
        <msg name='obs_x_thr_api_thread_arg_fn_caller'>Thread 1</msg>
        <msg name='obs_x_thr_api_thread_arg_fn_caller_copy'>Thread 2</msg>
        <msg name='obs_x_thr_omp_no_ordered_non_ordered_pragma_loc'>Construct site</msg>
        <msg name='obs_x_thr_omp_no_ordered_ordered_pragma_loc'>Thread 1</msg>
        <msg name='obs_x_thr_omp_no_ordered_ordered_pragma_loc_copy'>Thread 2</msg>
        <msg name='obs_x_thr_omp_sync_ordered_parallel_pragma_loc'>Construct site</msg>
        <msg name='obs_x_thr_omp_sync_ordered_sync_pragma_loc'>Thread 1</msg>
        <msg name='obs_x_thr_omp_sync_ordered_ordered_pragma_loc'>Thread 2</msg>
        <msg name='obs_x_thr_api_errorcode_function'>Construct site</msg>
        <msg name='obs_x_thr_api_errorcode_api_violator'>Thread 1</msg>
        <msg name='obs_x_inf_hold_n_wait_func'>Allocation site</msg>
        <msg name='obs_x_thr_inf_hold_n_wait_wait_call'>Construct site</msg>
        <msg name='obs_x_thr_inf_hold_n_wait_lock1'>Thread 1</msg>
        <msg name='obs_x_thr_inf_hold_n_wait_wait_call_copy'>Thread 2</msg>
        <msg name='obs_x_timed_hold_n_wait_event_alloc'>Allocation site</msg>
        <msg name='obs_x_thr_timed_hold_n_wait_fn'>Construct site</msg>
        <msg name='obs_x_thr_timed_hold_n_wait_thread1_create'>Thread 1</msg>
        <msg name='obs_x_thr_timed_hold_n_wait_wait_loc'>Thread 2</msg>
        <msg name='obs_x_thr_deadlock_terminate_fn'>Construct site</msg>
        <msg name='obs_x_thr_deadlock_terminate_thread'>Thread 1</msg>
        <msg name='obs_x_thr_deadlock_terminate_thread_copy'>Thread 2</msg>
        <msg name='obs_x_thr_omp_priv_not_on_stack_pragma'>Construct site</msg>
        <msg name='obs_x_thr_omp_priv_not_on_stack_pragma_copy'>Thread 1</msg>
        <msg name='obs_x_thr_omp_priv_not_on_stack_pragma_copy2'>Thread 2</msg>
        <msg name='OBS_MEM_LEAK_PRIMARY'>SC_obs_mem_leak_primary</msg>
        <msg name='OBS_BAD_MOD_PRIMARY'>SC_obs_bad_mod_primary</msg>
        <msg name='OBS_FUNC_CALL_SECONDARY'>SC_obs_func_call_secondary</msg>
        <msg name='OBS_FUNC_CALL_PRIMARY'>SC_obs_func_call_primary</msg>
        <msg name='OBS_DEF_SECONDARY'>SC_obs_def_secondary</msg>
        <msg name='OBS_UNINIT_READ_PRIMARY'>SC_obs_uninit_read_primary</msg>
        <msg name='OBS_MOD_PRIMARY'>SC_obs_mod_primary</msg>
        <msg name='OBS_DEF_PRIMARY'>SC_obs_def_primary</msg>
        <msg name='OBS_BAD_USE_PRIMARY'>SC_obs_bad_use_primary</msg>
        <msg name='OBS_SUSPISIOUS_ASSIGN_PRIMARY'>SC_obs_suspisious_assign_primary</msg>
        <msg name='OBS_UNKNOWN'>SC_obs_unknown</msg>
        <msg name='OBS_BUFF_OVERFLOW_PRIMARY'>SC_obs_buff_overflow_primary</msg>
        <msg name='OBS_MEM_ALLOC_PRIMARY'>SC_obs_mem_alloc_primary</msg>
        <msg name='OBS_DIV_ZERO_PRIMARY'>SC_obs_div_zero_primary</msg>
        <msg name='OBS_MOD_SECONDARY'>SC_obs_mod_secondary</msg>
        <msg name='OBS_FMT_MISMATCH_PRIMARY'>SC_obs_fmt_mismatch_primary</msg>
        <msg name='OBS_INFINITE_LOOP_PRIMARY'>SC_obs_infinite_loop_primary</msg>
        <msg name='OBS_MEM_ALLOC_SECONDARY'>SC_obs_mem_alloc_secondary</msg>
        <msg name='OBS_OMP_VIOLATION_PRIMARY'>SC_obs_omp_violation_primary</msg>
        <msg name='OBS_BAD_OPER_PRIMARY'>SC_obs_bad_oper_primary</msg>
        <msg name='OBS_NULL_DEREF_PRIMARY'>SC_obs_null_deref_primary</msg>
        <msg name='OBS_USE_SECONDARY'>SC_obs_use_secondary</msg>
        <msg name='OBS_UNREACH_PRIMARY'>SC_obs_unreach_primary</msg>
        <msg name='OBS_EX_THROW_PRIMARY'>SC_obs_ex_throw_primary</msg>
        <msg name='OBS_MISS_DEF_SECONDARY'>SC_obs_miss_def_secondary</msg>
        <msg name='OBS_OMP_DIR_MISUSE_PRIMARY'>SC_obs_omp_dir_misuse_primary</msg>
        <msg name='OBS_OMP_DIR_DECL_PRIMARY'>SC_obs_omp_dir_decl_primary</msg>
        <msg name='OBS_USE_PRIMARY'>SC_obs_use_primary</msg>
        <msg name='OBS_INT_OVERFLOW_PRIMARY'>SC_obs_int_overflow_primary</msg>
        <msg name='OBS_INT_UNDERFLOW_PRIMARY'>SC_obs_int_underflow_primary</msg>
        <msg name='OBS_BAD_DEREF_PRIMARY'>SC_obs_bad_deref_primary</msg>
        <msg name='OBS_TYPE_CONV_PRIMARY'>SC_obs_type_conv_primary</msg>
        <msg name='OBS_UNINIT_USE_PRIMARY'>SC_obs_uninit_use_primary</msg>
        <msg name='OBS_OMP_DIR_DECL_SECONDARY'>SC_obs_omp_dir_decl_secondary</msg>
        <msg name='obs_flush'>Cache flush</msg>
        <msg name='obs_flush_redundant'>Redundant flush</msg>
        <msg name='obs_mem_store'>Memory store</msg>
        <msg name='obs_mem_store_main'>Memory store</msg>
        <msg name='obs_mem_store_no_backup'>Store not undo logged or without undo log</msg>
        <msg name='obs_mem_store_not_fenced'>Unfenced cache flush before memory store</msg>
        <msg name='obs_mem_store_prev'>Unflushed memory store</msg>
        <msg name='obs_mem_store_unflushed'>Unflushed memory store</msg>
        <msg name='obs_mem_load'>Memory load</msg>
        <msg name='obs_mem_load_prev'>Memory load</msg>
        <msg name='obs_fence_redundant'>Redundant fence</msg>
        <msg name='obs_unmap'>Memory region unmap</msg>
        <msg name='obs_tx_begin'>Memory transaction</msg>
        <msg name='obs_tx_begin_without_end'>Memory transaction start without end</msg>
        <msg name='obs_tx_snapshot'>Memory block undo</msg>
        <msg name='obs_tx_redundant_snapshot'>Redundant memory block undo</msg>
        <msg name='obs_tx_api_usage'>Transaction API call</msg>
        <msg name='obs_invalid_kernel_arg_alloc'>Allocation site</msg>
        <msg name='obs_invalid_kernel_arg_thr1'>Invalid pointer usage</msg>
        <msg name='obs_host_ptr_on_device_alloc'>Allocation site</msg>
        <msg name='obs_host_ptr_on_device_thr1'>A host pointer is used on a device</msg>
        <msg name='obs_ptr_from_other_device_alloc'>Allocation site</msg>
        <msg name='obs_ptr_from_other_device_thr1'>A pointer from another device is used</msg>
        <msg name='obs_mismatch_queue_alloc'>Allocation site</msg>
        <msg name='obs_mismatch_queue_thr1'>Mismatched queue</msg>
        <msg name='obs_non_host_ptr_alloc'>Allocation site</msg>
        <msg name='obs_non_host_ptr_thr1'>A non-host pointer is used when a host pointer is expected</msg>
        <msg name='obs_async_buffer_alloc'>Allocation site</msg>
        <msg name='obs_async_buffer_thr1'>Asynchronous buffer usage</msg>
        <msg name='obs_invalid_kernel_arg_size'>Invalid size of kernel arguments</msg>
    </catalog>
</xmc>
